
TODO

    * покрыть тестами функционал библиотеки ( http://docs.jquery.com/QUnit )
    * пощупать jsonselect.org на предмет возможной интеграцией в маппинг (follow.mapper.js)

    Коллекции
        * отказ от жестких индексов и возможный переход на объекты с уникальными свойствами
        т.к при удалении объекта из середины коллекции (сейчас), индексы на другие объекты смещаются и теряется связь с DOM-элементами
        * при сохранении массива в модель, он должен быть сохранен как объект с индексами (и др. ключами которые is own property)
        * добавить возможностью юзать .forEach, .map, .filter итд. для коллекций-объктов

    XML-маппинг
    	* для коллекций, если список выбранных нод равен нулю, то не сохранять это свойство в модели вообще, вместо сохранения []
        (хотя если отказаться от использования массивов в пользу объектов с итерацией по свойствам, то этого и не надо будет делать)
        * добавить аттрибут для генерации ключа key="//xpath"
        * по-умолчанию ключи для коллекции должны быть числовыми, начиная с единицы
    
    Модули
        * отложенная загрузка модуля (и зависимостей)
        - подгрузка только по первичному клику на DOM-элементе (?)
        - возможно что-то типа вызова Follow.handle('my-module', 'my-model', 'gallery.images other.chain')
        который загрузит модуль, только если указанные цепочки данных будут существовать в модели
        
        * необходимость знать о состояниях загруженности модулей
        т.е добавить свойство типа initDepends="модуль1 модуль2" в объект, передаваемый в Follow.module,
        которое будет говорить выполнять init текущего модуля только тогда, когда зависимые модули успешно отработали
        Подумать над тем, как определять успешность отработки модуля (его init-части), на крайняк в конце ф-ии делать return true;
	
    Примеры
    	* переделать демки после всего
