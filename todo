
TODO

    Коллекции
        * нельзя удалять элементы из массива через Array.splice при model('my-collection.1', undefined)
        т.к при удалении объекта индексы на другие объекты смещаются и теряется связь с DOM-элементами
        
        * проблема с частичным обновлением коллекции:
          получается сейчас нужно юзать model.merge([,,,'changed item 1',, 'item 2'] или {20: 'new item', 22: 'new 2'})
          
        * перевод массивов на объекты (для коллекций):
         - model.length('chain') - подсчет количества свойств в объекте
         - model.map('chain', callback, [filter]) - пробежаться по свойствами и вернуть массив с новыми данными (for var i in)
	
    Другое
        * пощупать jsonselect.org на предмет возможной интеграцией в маппинг (follow.mapper.js)
    	* переделать демо примеры

    XML-маппинг
    	* для коллекций, если список выбранных нод равен нулю, то не сохранять это свойство в модели вообще, вместо сохранения []
        * добавить аттрибут для генерации ключа key="//xpath"
        * по-умолчанию ключи для коллекции должны быть числовыми, начиная с единицы
    
    Модули
        * отложенная загрузка модуля (и зависимостей)
        - подгрузка только по первичному клику на DOM-элементе (?)
        - возможно что-то типа вызова Follow.handle('my-module', 'my-model', 'gallery.images other.chain')
        который загрузит модуль, только если указанные цепочки данных будут существовать в модели
        
        * необходимость знать о состояниях загруженности модулей
        т.е добавить свойство типа initDepends="модуль1 модуль2" в объект, передаваемый в Follow.module,
        которое будет говорить выполнять init текущего модуля только тогда, когда зависимые модули успешно отработали
        Подумать над тем, как определять успешность отработки модуля (его init-части), на крайняк в конце ф-ии делать return true;
